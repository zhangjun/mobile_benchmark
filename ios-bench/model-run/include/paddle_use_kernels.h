#pragma once
#include "paddle_lite_factory_helper.h"

USE_LITE_KERNEL(softmax, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(softmax, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(transpose, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(transpose, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(transpose2, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(transpose2, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(mul, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(concat, kARM, kAny, kNCHW, def);
USE_LITE_KERNEL(unbind, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(unbind, kHost, kInt64, kNCHW, def);
USE_LITE_KERNEL(elementwise_add, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_add, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(elementwise_add, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_add_activation, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_sub, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_sub, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_sub_activation, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_mul, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_mul, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(elementwise_mul, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_mul_activation, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_mul_activation, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(elementwise_max, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_max_activation, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_min, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_min_activation, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_div, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_div, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(elementwise_div, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(fusion_elementwise_div_activation, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_mod, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(elementwise_pow, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_pow, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(elementwise_floordiv, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(elementwise_floordiv, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(box_coder, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(layout, kARM, kFloat, kNCHW, nchw2nhwc);
USE_LITE_KERNEL(layout, kARM, kFloat, kNCHW, nhwc2nchw);
USE_LITE_KERNEL(layout, kARM, kInt8, kNCHW, int8_nchw2nhwc);
USE_LITE_KERNEL(layout, kARM, kInt8, kNCHW, int8_nhwc2nchw);
USE_LITE_KERNEL(layout_once, kARM, kFloat, kNCHW, nchw2nhwc);
USE_LITE_KERNEL(layout_once, kARM, kFloat, kNCHW, nhwc2nchw);
USE_LITE_KERNEL(layout_once, kARM, kInt8, kNCHW, int8_nchw2nhwc);
USE_LITE_KERNEL(layout_once, kARM, kInt8, kNCHW, int8_nhwc2nchw);
USE_LITE_KERNEL(conv2d, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(conv2d, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(arg_max, kARM, kAny, kNCHW, fp32);
USE_LITE_KERNEL(feed, kHost, kAny, kAny, def);
USE_LITE_KERNEL(transpose, kARM, kAny, kNCHW, def);
USE_LITE_KERNEL(transpose2, kARM, kAny, kNCHW, def);
USE_LITE_KERNEL(scale, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(scale, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(affine_channel, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(reshape, kHost, kAny, kAny, def);
USE_LITE_KERNEL(reshape2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(flatten, kHost, kAny, kAny, def);
USE_LITE_KERNEL(flatten2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(elementwise_mul, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(elementwise_mul, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(pad2d, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(pad2d, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(slice, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(slice, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(feed, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(feed, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(conv2d_transpose, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(conv2d_transpose, kARM, kInt8, kNCHW, fp32_out);
USE_LITE_KERNEL(conv2d_transpose, kARM, kInt8, kNCHW, int8_out);
USE_LITE_KERNEL(fc, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(fc, kARM, kInt8, kNCHW, int8out);
USE_LITE_KERNEL(fc, kARM, kInt8, kNCHW, fp32out);
USE_LITE_KERNEL(pad2d, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(depthwise_conv2d, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(depthwise_conv2d, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(matmul, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(matmul, kARM, kInt8, kNCHW, def);
USE_LITE_KERNEL(io_copy, kMetal, kFloat, kMetalTexture2DArray, host_to_device_image);
USE_LITE_KERNEL(io_copy, kMetal, kFloat, kMetalTexture2DArray, device_image_to_host);
USE_LITE_KERNEL(io_copy_once, kMetal, kFloat, kMetalTexture2DArray, host_to_device_image);
USE_LITE_KERNEL(io_copy_once, kMetal, kFloat, kMetalTexture2DArray, device_image_to_host);
USE_LITE_KERNEL(scale, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(scale, kARM, kInt32, kNCHW, def);
USE_LITE_KERNEL(scale, kARM, kInt64, kNCHW, def);
USE_LITE_KERNEL(fill_constant_batch_size_like, kHost, kAny, kNCHW, def);
USE_LITE_KERNEL(fetch, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(assign_value, kHost, kAny, kNCHW, def);
USE_LITE_KERNEL(pool2d, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(pool2d, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(fetch, kHost, kAny, kAny, def);
USE_LITE_KERNEL(slice, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(slice, kARM, kFloat, kNCHW, float_i64_starts_ends);
USE_LITE_KERNEL(slice, kARM, kFloat, kNCHW, bool_slice);
USE_LITE_KERNEL(slice, kARM, kFloat, kNCHW, int32_slice);
USE_LITE_KERNEL(slice, kARM, kFloat, kNCHW, def_int64);
USE_LITE_KERNEL(squeeze, kHost, kAny, kAny, def);
USE_LITE_KERNEL(squeeze2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(expand_as, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(expand_as, kHost, kFloat, kAny, int64);
USE_LITE_KERNEL(box_coder, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(concat, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(concat, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(instance_norm, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(conv2d, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(depthwise_conv2d, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(conv2d, kARM, kInt8, kNCHW, int8_out);
USE_LITE_KERNEL(conv2d, kARM, kInt8, kNCHW, fp32_out);
USE_LITE_KERNEL(depthwise_conv2d, kARM, kInt8, kNCHW, int8_out);
USE_LITE_KERNEL(depthwise_conv2d, kARM, kInt8, kNCHW, fp32_out);
USE_LITE_KERNEL(elementwise_add, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(elementwise_add, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(pool2d, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(matmul, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(matmul, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(bilinear_interp, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(bilinear_interp, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(grid_sampler, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(bilinear_interp, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(nearest_interp, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(bilinear_interp_v2, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(nearest_interp_v2, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(relu, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(leaky_relu, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(prelu, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(sigmoid, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(tanh, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(relu6, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(thresholded_relu, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(elu, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(reduce_mean, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(fill_constant, kHost, kAny, kNCHW, def);
USE_LITE_KERNEL(exp, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(exp, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(stack, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(stack, kHost, kFloat, kAny, int32_def);
USE_LITE_KERNEL(stack, kHost, kFloat, kAny, int64_def);
USE_LITE_KERNEL(expand, kHost, kAny, kAny, def);
USE_LITE_KERNEL(multiclass_nms, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(multiclass_nms2, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(multiclass_nms3, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(split, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(split, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(arg_max, kHost, kAny, kNCHW, fp32);
USE_LITE_KERNEL(reshape2, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(reshape2, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(flatten, kMetal, kFloat, kMetalTexture2DArray, image2d);
USE_LITE_KERNEL(flatten, kMetal, kFP16, kMetalTexture2DArray, image2d);
USE_LITE_KERNEL(flatten2, kMetal, kFloat, kMetalTexture2DArray, image2d);
USE_LITE_KERNEL(flatten2, kMetal, kFP16, kMetalTexture2DArray, image2d);
USE_LITE_KERNEL(range, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(range, kHost, kInt64, kAny, def);
USE_LITE_KERNEL(range, kHost, kInt32, kAny, def);
USE_LITE_KERNEL(calib, kARM, kInt8, kNCHW, fp32_to_int8);
USE_LITE_KERNEL(calib, kARM, kInt32, kNCHW, int32_to_fp32);
USE_LITE_KERNEL(calib, kARM, kInt32, kNCHW, int32_to_int64);
USE_LITE_KERNEL(calib, kARM, kInt32, kNCHW, fp32_to_int32);
USE_LITE_KERNEL(calib, kARM, kInt64, kNCHW, int64_to_fp32);
USE_LITE_KERNEL(calib, kARM, kInt8, kNCHW, int8_to_fp32);
USE_LITE_KERNEL(calib, kARM, kInt64, kNCHW, int64_to_int32);
USE_LITE_KERNEL(calib_once, kARM, kInt8, kNCHW, fp32_to_int8);
USE_LITE_KERNEL(calib_once, kARM, kInt8, kNCHW, int8_to_fp32);
USE_LITE_KERNEL(calib_once, kARM, kInt64, kNCHW, int64_to_int32);
USE_LITE_KERNEL(softmax, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(sigmoid, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(sigmoid, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(affine_grid, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(fc, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(fc, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(yolo_box, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(write_back, kHost, kAny, kAny, tensor_copy);
USE_LITE_KERNEL(cast, kARM, kAny, kNCHW, def);
USE_LITE_KERNEL(dropout, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(unsqueeze, kHost, kAny, kAny, def);
USE_LITE_KERNEL(unsqueeze2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(prior_box, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(split, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(split, kHost, kFloat, kNCHW, int32);
USE_LITE_KERNEL(split, kHost, kFloat, kNCHW, int64);
USE_LITE_KERNEL(split, kHost, kInt64, kNCHW, def);
USE_LITE_KERNEL(lod_array_length, kHost, kAny, kAny, def);
USE_LITE_KERNEL(batch_norm, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(sync_batch_norm, kARM, kFloat, kNCHW, def);
USE_LITE_KERNEL(nearest_interp, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(nearest_interp, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(relu, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(relu6, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(leaky_relu, kMetal, kFloat, kMetalTexture2DArray, def);
USE_LITE_KERNEL(relu, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(relu6, kMetal, kFP16, kMetalTexture2DArray, def);
USE_LITE_KERNEL(leaky_relu, kMetal, kFP16, kMetalTexture2DArray, def);